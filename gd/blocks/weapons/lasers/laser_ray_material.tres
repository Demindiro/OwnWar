[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
resource_local_to_scene = true
code = "shader_type spatial;
render_mode cull_disabled;

uniform vec4 albedo_color: hint_color = vec4(1.0);
uniform vec3 direction = vec3(0.0, 0.0, 1.0);
uniform float ease_factor = 1.0;
uniform float start_time = 9999999999999999999.0;


float easeInOutCubic(float x) {
	if (x < 0.5) {
		return 4.0 * x * x * x;
	} else {
		x = -2.0 * x + 2.0;
		return 1.0 - x * x * x * 0.5;
	}
}

void fragment() {
	vec2 uv = UV * 2.0 - 1.0;
	float f = 1.0 - pow(easeInOutCubic(abs(uv.x)), ease_factor);
	ALBEDO = clamp(mix(albedo_color.rgb, vec3(1.0), f), vec3(0.0), vec3(1.0));
	EMISSION = ALBEDO;
	float a = 1.0 - clamp(TIME - start_time, 0.0, 1.0);
	ALPHA = (1.0 - pow(abs(uv.x), 2.0)) * pow(a, 2.0);
}

void light() {
	DIFFUSE_LIGHT = vec3(0.0);
	SPECULAR_LIGHT = vec3(0.0);
}"

[resource]
resource_local_to_scene = true
shader = SubResource( 1 )
shader_param/albedo_color = Color( 0, 0.537255, 1, 1 )
shader_param/direction = Vector3( 0, 0, 1 )
shader_param/ease_factor = 0.15
shader_param/start_time = 1e+19
